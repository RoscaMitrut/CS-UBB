     1                                  ;Se citeste de la tastatura un sir de numere in baza 10 fara semn. Sa se determine valoarea minima din sir si sa se afiseze in fisierul min.txt (fisierul va fi creat) valoarea minima, in baza 16
     2                                  bits 32
     3                                  global start
     4                                  
     5                                  extern exit,scanf,fprintf,fopen,fclose
     6                                  
     7                                  import exit msvcrt.dll
     8                                  
     9                                  import scanf msvcrt.dll
    10                                  
    11                                  import fprintf msvcrt.dll
    12                                  import fopen msvcrt.dll 
    13                                  import fclose msvcrt.dll
    14                                  
    15                                  segment data use32 class=data
    16 00000000 00000000                    n dd 0
    17 00000004 00000000<rept>              nr times 3 dd 0
    18                                      
    19 00000010 256400                      format_citire db "%d", 0
    20                                      
    21 00000013 6D696E2E74787400            nume_fisier db "min.txt",0
    22 0000001B 7700                        mod_acces db "w",0
    23 0000001D 00000000                    descriptor_fisier dd 0
    24                                  
    25                                  segment code use32 class=code
    26                                      start:
    27 00000000 68[1B000000]                    push dword mod_acces
    28 00000005 68[13000000]                    push dword nume_fisier
    29 0000000A FF15[00000000]                  call [fopen]
    30 00000010 83C408                          add esp,2*4
    31                                          
    32 00000013 A3[1D000000]                	mov [descriptor_fisier],eax
    33                                          
    34 00000018 83F800                          cmp eax,0
    35 0000001B 746E                        	je sfarsit
    36                                          
    37                                          
    38 0000001D FC                              cld
    39 0000001E BF[04000000]                    mov edi,nr
    40 00000023 BB00000000                      mov ebx,0
    41                                          citire:
    42 00000028 68[00000000]                   		push dword n
    43 0000002D 68[10000000]                		push dword format_citire
    44 00000032 FF15[00000000]                      call [scanf]
    45 00000038 83C408                              add esp,2*4
    46                                              ;apelam scanf^
    47 0000003B A1[00000000]                        mov eax,[n]
    48 00000040 83F800                              cmp eax,0
    49 00000043 7406                                je outside
    50                                              ;verificam daca am citit cu succes^
    51 00000045 AB                         		 	stosd
    52 00000046 83C301                              add ebx,1
    53                                              ;stocam nr dat^
    54 00000049 EBDD                        		jmp citire
    55                                      outside:
    56 0000004B 89D9                            mov ecx,ebx
    57 0000004D 83E901                          sub ecx,1
    58                                  
    59 00000050 BE[04000000]                    mov esi,nr
    60 00000055 51                              push ecx
    61                                          
    62 00000056 AD                              lodsd
    63 00000057 89C3                            mov ebx,eax    
    64 00000059 E30C                            jecxz zero
    65                                          
    66 0000005B 59                              pop ecx
    67                                          ;mutam primul element in ebx^
    68                                          compare:
    69 0000005C 51                                  push ecx
    70 0000005D AD                                  lodsd
    71 0000005E 39C3                                cmp ebx,eax
    72 00000060 59                                  pop ecx
    73 00000061 7202                                jb gata
    74 00000063 89C3                                mov ebx,eax
    75                                          gata:
    76 00000065 E2F5                            loop compare
    77                                          
    78                                          zero:
    79                                  
    80                                          
    81 00000067 53                              push ebx
    82 00000068 FF35[1D000000]                  push dword [descriptor_fisier]
    83 0000006E 68[10000000]                    push format_citire
    84 00000073 FF15[00000000]                  call [fprintf]
    85                                          
    86 00000079 83C408                          add esp,2*4
    87                                          
    88 0000007C FF35[1D000000]                  push dword [descriptor_fisier]
    89 00000082 FF15[00000000]                  call [fclose]
    90 00000088 83C404                          add esp, 4
    91                                  
    92                                          sfarsit:
    93 0000008B 6A00                            push    dword 0      
    94 0000008D FF15[00000000]                  call    [exit]    
